package com.example.svgttojpeg;

import org.apache.batik.transcoder.Transcoder;
import org.apache.batik.transcoder.TranscoderInput;
import org.apache.batik.transcoder.TranscoderOutput;
import org.apache.batik.transcoder.image.JPEGTranscoder;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import java.io.*;

@RestController
public class SvgController {

    @PostMapping("/convert")
    public ResponseEntity<String> convertSvgToJpeg(@RequestBody String svgData) {
        try {
            JPEGTranscoder t = new JPEGTranscoder();
            t.addTranscodingHint (JPEGTranscoder.KEY_EXECUTE_ONLOAD, Boolean. TRUE); // enable scripts
            t.addTranscodingHint (JPEGTranscoder.KEY_ALLOWED_SCRIPT_TYPES, "text/ecmascript,application/java-archive,"); // fix for the bug which blocks the execution of scripts
            
            TranscoderInput input = new TranscoderInput(new StringReader(svgData));
            OutputStream ostream = new FileOutputStream("demo.jpg");
            TranscoderOutput output = new TranscoderOutput(ostream);

            t.transcode(input, output);

            ostream.flush();
            ostream.close();

            return new ResponseEntity<>("SVG converted to JPEG successfully", HttpStatus.OK);
        } catch (Exception e) {
            e.printStackTrace();
            return new ResponseEntity<>("Error converting SVG to JPEG", HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }
}

